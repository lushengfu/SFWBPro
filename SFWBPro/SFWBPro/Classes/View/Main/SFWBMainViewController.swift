//
//  SFWBMainViewController.swift
//  SFWBPro
//
//  Created by happy on 2018/3/1.
//  Copyright ¬© 2018Âπ¥ happy. All rights reserved.
//

import UIKit

class SFWBMainViewController: UITabBarController {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // ËÆæÁΩÆÂ≠êÊéßÂà∂Âô®
        setupChildController()
        // Ê∑ªÂä†ÂèëÂ∏ÉÊåâÈíÆ
        addComposeButton()
    }
    
    /**
     portrait : Á´ñÂ±è, ËÇñÂÉè
     landscape : Ê®™Â±è, È£éÊôØÁîª
     
     - ‰ΩøÁî®‰ª£Á†ÅÊéßÂà∂ËÆæÂ§áÁöÑÊñπÂêë,Â•ΩÂ§ÑÂèØ‰ª•ÂÜçÈúÄË¶ÅÊ®™Â±èÁöÑÊó∂ÂÄô,ÂçïÁã¨Â§ÑÁêÜ!
     - ËÆæÁΩÆÊîØÊåÅÁöÑÊñπÂêëÂêé,ÂΩìÂâçÁöÑÊéßÂà∂Âô®ÂèäÂ≠êÊéßÂà∂Âô®ÈÉΩ‰ºöÈÅµÂÆàËøô‰∏™ÊñπÂêë!
     - Â¶ÇÊûúÊí≠ÊîæËßÜÈ¢ë, ÈÄöÂ∏∏ÊòØÈÄöËøá modal Â±ïÁé∞ÁöÑ!
     */
    override var supportedInterfaceOrientations: UIInterfaceOrientationMask {
        return .portrait
    }
    
    // MARK: ÂèëÂ∏ÉÂæÆÂçöÁÇπÂáª‰∫ã‰ª∂
    // FIXME: ÂèëÂ∏ÉÂæÆÂçö
    // @objc  ÂÖÅËÆ∏Ëøô‰∏™ÂáΩÊï∞Âú®ËøêË°åÊó∂ÈÄöËøáOCÁöÑÊ∂àÊÅØÊú∫Âà∂Ë¢´Ë∞ÉÁî®
    @objc fileprivate func composeStatus() {
        print("ÂèëÂ∏ÉÂæÆÂçö")
    }

    // ÊáíÂä†ËΩΩÂèëÂ∏ÉÊåâÈíÆ
    fileprivate lazy var composeButton : UIButton = UIButton.yw_imageButton("tabbar_compose_icon_add", backgroundImageName: "tabbar_compose_button")
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
    }

}

/// Áõ∏ÂΩì‰∫éOCÁöÑÂàÜÁ±ª, ÂêåÊ†∑‰∏çËÉΩÂÆö‰πâÂ±ûÊÄß,Âè™ËÉΩÂÆö‰πâÊñπÊ≥ï
extension SFWBMainViewController {
    
    // Ê∑ªÂä†ÂèëÂ∏ÉÊåâÈíÆ
    fileprivate func addComposeButton() {
        tabBar.addSubview(composeButton)
        
        let count = childViewControllers.count
        
        let width = view.bounds.width / CGFloat(count) - 1 // ËøôÈáåÂáè1,ÊòØË¶ÅÂÆåÂÖ®Ë¶ÜÁõñtabbarItemÁöÑÊâ©ÂÆπÂå∫(ÂÆπÈîôÂå∫)
        
        // CGRectInset Ê≠£Êï∞ÊòØÂêëÂÜÖÁº©Ëøõ,Ë¥üÊï∞ÊòØÂêëÂ§ñÊâ©Â±ï
        composeButton.frame = tabBar.bounds.insetBy(dx: 2 * width, dy: 0)
        
        // Ê∑ªÂä†ÁõëÂê¨ÊñπÊ≥ï
        composeButton.addTarget(self, action: #selector(composeStatus), for: .touchUpInside)
    }
    
    // ËÆæÁΩÆÂ≠êÊéßÂà∂Âô®
    fileprivate func setupChildController() {
        
        guard let path = Bundle.main.path(forResource: "main.json", ofType: nil),
            let data = NSData(contentsOfFile: path),
            let array = try? JSONSerialization.jsonObject(with: data as Data, options: []) as? [[String : AnyObject]]
        else {
            return
        }
        
//        let array : [[String : AnyObject]] = [
//            ["clsName" : "SFWBHomeViewController" as AnyObject, "title" : "È¶ñÈ°µ" as AnyObject, "imageName" : "home" as AnyObject,
//             "vistorInfo" : ["imageName" : "", "message" : "ÂÖ≥Ê≥®‰∏Ä‰∏ã‰∫∫,ÁúãÁúãËøôÈáåÊúâ‰ªÄ‰πàÊñ∞È≤ú‰∫ãÊàñËÄÖÊñ∞È≤ú‰∫∫ÁöÑ! Âä†Ê≤πüí™‚õΩÔ∏è"] as AnyObject],
//            ["clsName" : "SFWBMessageViewController" as AnyObject, "title" : "Ê∂àÊÅØ" as AnyObject, "imageName" : "message_center" as AnyObject, "vistorInfo" : ["imageName" : "visitordiscover_image_message", "message" : "ÁôªÂΩïÂêé,ÂèØ‰ª•ÁúãÂà∞Áõ∏Â∫îÁöÑ‰ø°ÊÅØ,ÂÖ≥Ê≥®‰∏Ä‰∏ã‰∫∫,ÁúãÁúãËøôÈáåÊúâ‰ªÄ‰πàÊñ∞È≤ú‰∫ãÊàñËÄÖÊñ∞È≤ú‰∫∫ÁöÑ! Âä†Ê≤πüí™‚õΩÔ∏è"] as AnyObject],
//            ["clsName" : "UIViewController" as AnyObject],
//            ["clsName" : "SFWBDiscoverViewController" as AnyObject, "title" : "ÂèëÁé∞" as AnyObject, "imageName" : "discover" as AnyObject,
//             "vistorInfo" : ["imageName" : "visitordiscover_image_message", "message" : "ÂÖ≥Ê≥®‰∏Ä‰∏ã‰∫∫,ÁúãÁúãËøôÈáåÊúâ‰ªÄ‰πàÊñ∞È≤ú‰∫ãÊàñËÄÖÊñ∞È≤ú‰∫∫ÁöÑ! Âä†Ê≤πüí™‚õΩÔ∏è"] as AnyObject],
//            ["clsName" : "SFWBProfileViewController" as AnyObject, "title" : "ÊàëÁöÑ" as AnyObject, "imageName" : "profile" as AnyObject,
//             "vistorInfo" : ["imageName" : "visitordiscover_image_profile", "message" : "ÁôªÂΩïÂêé,ÂèØ‰ª•ÁúãÂà∞‰∏™‰∫∫‰ø°ÊÅØ,ÂÖ≥Ê≥®‰∏Ä‰∏ã‰∫∫,ÁúãÁúãËøôÈáåÊúâ‰ªÄ‰πàÊñ∞È≤ú‰∫ãÊàñËÄÖÊñ∞È≤ú‰∫∫ÁöÑ! Âä†Ê≤πüí™‚õΩÔ∏è"] as AnyObject]
//        ]

//        (array as NSArray).write(toFile: "/Users/happy/Desktop/demo.plist", atomically: true)
        
//        let data = try! JSONSerialization.data(withJSONObject: array, options: [.prettyPrinted])
//
//        (data as NSData).write(toFile: "/Users/happy/Desktop/demo.json", atomically: true)
        
        var arrayM = [UIViewController]()
        for dict in array! {
            arrayM.append(controller(dict: dict))
        }
        
        viewControllers = arrayM
        
    }
    
    // Âà©Áî®Â≠óÂÖ∏ÁîüÊàêÂ≠êÊéßÂà∂Âô®
    // clsName , title , imageName
    fileprivate func controller(dict : [String : AnyObject]) -> UIViewController {
        guard let clsName = dict["clsName"] as? String,
               let title = dict["title"] as? String,
            let imageName = dict["imageName"] as? String,
        let vistorInfo = dict["vistorInfo"] as? [String : String],
            let cls = NSClassFromString(Bundle.main.nameSpace + "." + clsName) as? SFWBBaseViewController.Type
        else {
            return UIViewController()
        }
        
        let vc = cls.init()
        vc.title = title
        vc.tabBarItem.image = UIImage(named: "tabbar_" + imageName)
        vc.tabBarItem.selectedImage = UIImage(named: "tabbar_" + imageName + "_selected")?.withRenderingMode(.alwaysOriginal)
        vc.vistorInfo = vistorInfo
        // ‰øÆÊîπtabbarÁöÑÂ≠ó‰ΩìÈ¢úËâ≤
        vc.tabBarItem.setTitleTextAttributes(
            [NSAttributedStringKey.foregroundColor : UIColor.orange],
            for: .highlighted)
        // ‰øÆÊîπÂ≠ó‰ΩìÂ§ßÂ∞è
        vc.tabBarItem.setTitleTextAttributes(
            [NSAttributedStringKey.font : UIFont.systemFont(ofSize: 12)],
            for: UIControlState.init(rawValue: 0))
        
        let nav = SFWBNavigationViewController(rootViewController: vc)
        
        return nav
    }
    
}
